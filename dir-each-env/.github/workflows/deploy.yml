name: CI/CD to AWS ECS

on:
  push:
    branches:
      - main
      - staging
      - '**'  # 其他分支部署到 dev

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      IMAGE_NAME: my-app

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK
        uses: actions/setup-java@v4
        with:
          java-version: '17'

      - name: Set up AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-1

      - name: Build JAR with Gradle
        run: |
          ./gradlew build

      - name: Build Docker image
        run: |
          docker build -t ${{ env.IMAGE_NAME }}:${{ github.sha }} .

      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region ap-northeast-1 \
            | docker login --username AWS --password-stdin ${{ secrets.ECR_REGISTRY }}

      - name: Tag and Push Docker image
        run: |
          docker tag ${{ env.IMAGE_NAME }}:${{ github.sha }} ${{ secrets.ECR_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}
          docker push ${{ secrets.ECR_REGISTRY }}/${{ env.IMAGE_NAME }}:${{ github.sha }}

      - name: Deploy with Terraform
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            ENV_DIR="production"
          elif [[ "${{ github.ref }}" == "refs/heads/staging" ]]; then
            ENV_DIR="staging"
          else
            ENV_DIR="dev"
          fi

          cd terraform/$ENV_DIR

          terraform init

          terraform plan -var="image_tag=${{ github.sha }}"

          terraform apply -auto-approve -var="image_tag=${{ github.sha }}"

